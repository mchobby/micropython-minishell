====================
=    Mini Shell    =
====================

Mini Shell (mshell) is a rudimentary shell designed to run accross all
micropython board implementation. It support rudimentary file filesystem
operations and may be a useful tool when dealing with REPL remotely.

Command: Description             : Example
-------+-------------------------+---------------------------------
help   : display help file       : help
cat    : display file content    : cat main.py
cp     : Copy file (binary)      : cp source.py destin.py
edit   : start text editor       : pye main.py
exit   : exit mini-shell         : exit
free   : Free memory             : free
ls     : list files              : ls -OR- ls /lib
more   : paging file display     : more
mv     : Move a file             : move source.py destin.py
rm     : remove/delete file      : rm demo.py
run    : execute python file     : ./gp25 -OR- run gp25.py -OR- run gp25

some command are available as plug-in stored in /lib/__<command>.py

plug-in    : Description                        : Example
-----------+------------------------------------+-------------------------------
ptest      : Test plug-in showing params        : ptest logo.txt 128 -p=120
hexdump    : display file in hexadecimal        : hexdump logo.txt
ifconfig   : display network interfaces details : ifconfig
wifi       : manage Station wifi                : wifi
           :                                    : wifi up, wifi down, wifi scan,
           :                                    : wifi connect SSID PSWD
touch      : create empty file                  : touch data.log
append     : append text to file                : append target.txt "What men?"
uname      : System identification/information  : uname
df         : Disk Free/disk usage               : df -OR- df /sd
ap         : manage AccessPoint WiFi            : ap up, ap down

LIMITATION:
* edit does not remember the filename when saving.
* hexdump not implemented

Start Mini Shell
----------------
Type the following in REPL to starts mshell
   import mshell
or
   mshell.run() # to restart


$ help
------
display this help file.


$ ap
----
Used to control the wifi interface in ACCESS POINT mode. See the "wifi" command
to control the STATION mode and "ifconfig" for more information.

Without parameter, it shows the current access point status.
$ ap
<CYW43 AP up 192.168.4.1>
STAT_GOT_IP - connection successful

With 'up' up do activates the AP access point wifi interface. Use the 'down'
parameter to shutdown the interface
$ ap up
Going up


$ append source texte
---------------------
Append the texte (can be quoted if containing space) to the source file.


$ cat source
------------
Display the content of source file.


$ cp source destin
------------------
Binary copy the source file to destin file. Destin file is overwrites if exists.


$ df
$ df path
---------
Show the filesystem size and usage. By default the command target the "/" path.
It show the following content:
	FileSystem: 1441792 bytes (1408 KB, 352 Blocks)
	Free      : 1429504 bytes (1396 KB, 349 Blocks)
	Block size: 4096 bytes

$ edit filename
---------------
Start the pye editor to edit the file content.
If not present on the file system, install it from
https://github.com/robert-hh/Micropython-Editor/blob/master/pye.py


$ exit
------
Exists the mini shell


$ free
------
Make a Garbage Collector cleanup then display the free memory available.


$ ifconfig
----------
just show the information about the STA (station) and AP (access point) wifi
interface

$ ifconfig
Access Point: inactive
Station mode: ACTIVE
   <CYW43 STA up 192.168.1.26>
   IP     : 192.168.1.26
   NetMask: 255.255.255.0
   Gateway: 192.168.1.1
   DNS    : 192.168.1.1


$ ls
$ ls path
---------
list the files


$ more source
------------
Display the content of source file and pause every X lines (depending on screen
rows ). Reads can be quit any time by pressing "q".


$ mv source destin
------------------
Move/rename the source file to destin file. Destin file is overwrites if exists.


$ rm source
-----------
remove the source file from file system.


$ run source
------------
Execute the content of a Python script by import it (or reimport it) from
the source file. Run cal  can be shorthen with the "./" as in Linux.

File must be stored into root folder or /lib folder.

All the following syntaxes are right to execute the gp25.py file:
run gp25
run gp25.py
./gp25
./gp25.py


$ touch source
--------------
create an empty file (with source name) into the file system.


$ uname
-------
Displays the information enclosed within os.uname() .
It shows the following content:
	sysname : rp2
	nodename: rp2
	release : 1.18.0
	version : v1.18 on 2022-01-17 (GNU 11.2.0 MinSizeRel)
	machine : Raspberry Pi Pico with RP2040


$ wifi
------
Used to control the wifi interface.

Without parameter, it shows the current wifi status.
$ wifi
<CYW43 STA down 0.0.0.0>
STAT_IDLE - no connection and no activity


With 'up' up do activates the STA station wifi interface. Use the 'down'
parameter to shutdown the interface
$ wifi up
Going up

With 'scan' parameter, it scan the STA station network for access points. It
also shown AP (access point) information if it is active. Wifi with RSSI closer
from 0 are best.
$ wifi scan
Interface down
SSID                      : BSSID                :   Ch : RSSI : Security        : Hidden

Proximus Public Wi-Fi     : A2.1B.29.9C.69.F7    :    1 :  -90 : WPA3            : 1
Orange-e02b2              : 10.0C.6B.64.F6.6E    :    2 :  -79 : WPA3            : 2
ATCG103                   : 40.F2.01.88.1E.0A    :   11 :  -78 : WPA3            : 2
ATCG103_EXT               : 00.31.92.F3.E9.D2    :   11 :  -47 : 7               : 8
                          : 9E.A3.A9.88.E9.78    :   13 :  -85 : WPA3            : 1

With 'connect' parameter, the STA (station) interface can be connected to an
existing WiFi. The connexion attempt is limited 40 seconds.
$ wifi connect SSID_PARAM PASSWD_PARAM
Connecting to ATCG103...
still not connected
ERROR -1

This second example show a successful example.
$ wifi connect MYWIFI dummy4all
Connecting to MYWIFI...
connected!
$ wifi
<CYW43 STA up 192.168.1.26>
STAT_GOT_IP - connection successful
